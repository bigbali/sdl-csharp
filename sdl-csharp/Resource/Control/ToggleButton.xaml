<Button x:Class="sdl_csharp.Resource.Control.ToggleButton"
        x:Name="ToggleButtonElement"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d">
    <Button.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="ToggleButtonBorder.Brush"           Color="#59426380"/>
                    <SolidColorBrush x:Key="ToggleButtonBorder.Brush.MouseOver" Color="#FF577D9A"/>
                    <!-- Wrapper button -->
                    <Style x:Key="ToggleButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="HorizontalAlignment"        Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalAlignment"          Value="Stretch" />
                        <Setter Property="Height"                     Value="24" />
                        <Setter Property="BorderThickness"            Value="0" />
                        <Setter Property="Padding"                    Value="0" />
                        <Setter Property="Cursor"                     Value="Hand" />
                        <Setter Property="Background"                 Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border">
                                        <ContentPresenter x:Name="contentPresenter" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent" TargetName="border"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- Border -->
                    <Style x:Key="ToggleButton.Border" TargetType="{x:Type Border}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="{StaticResource Color.Border}" />
                        <Setter Property="CornerRadius" Value="12" />
                        <Setter Property="Width" Value="48" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                    </Style>
                    <!-- Label -->
                    <Style x:Key="ToggleButton.Label" TargetType="{x:Type Label}">
                        <Setter Property="Margin" Value="60, 0, 0, 0" />
                        <Setter Property="Padding" Value="5,0,5,0" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="{StaticResource Color.Text}" />
                        <Setter Property="Content" Value="{Binding Content, FallbackValue='No content'}" />
                        <d:Setter Property="Content" Value="ToggleButton" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}"
                                         Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <!-- Switch button -->
                    <Style x:Key="ToggleButton.Button" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="22"/>
                        <Setter Property="Height" Value="22" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="IsHitTestVisible"  Value="False" />
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform X="0" />
                            </Setter.Value>
                        </Setter>
                        <d:Setter Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform X="24" />
                            </Setter.Value>
                        </d:Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="(RenderTransform).(TranslateTransform.X)">
                                            <DoubleAnimation To="24" 
                                                             Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="(RenderTransform).(TranslateTransform.X)">
                                            <DoubleAnimation To="0" 
                                                             Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Button.Resources>
    <Button.Template>
        <ControlTemplate>
            <Button Style="{StaticResource ToggleButton}">
                <Grid DataContext="{Binding ElementName=ToggleButtonElement}">
                    <Border Style="{StaticResource ToggleButton.Border}" x:Name="Button">
                        <Button Style="{StaticResource ToggleButton.Button}" />
                    </Border>
                    <Label Style="{StaticResource ToggleButton.Label}"/>
                </Grid>
            </Button>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Color.Button.Background.Hover}" TargetName="Button"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>
