<TextBox
    x:Class="sdl_csharp.Resource.Control.TextInput"
    x:Name="TextInputElement"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:sdl_csharp.Resource.Control"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="30"
    d:DesignWidth="200">
    <TextBox.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <Style
                        x:Key="TextInput.TextBox"
                        BasedOn="{StaticResource {x:Type TextBox}}"
                        TargetType="{x:Type TextBox}">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <d:Setter Property="Text" Value="TextInput" />
                    </Style>
                    <Style x:Key="TextInput.Placeholder" TargetType="{x:Type Label}">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="10, 3, 10, 3" />
                        <Setter Property="Foreground" Value="Gray" />
                        <Setter Property="IsHitTestVisible" Value="False" />                        <!-- Since the placeholder overlaps TextBox, allow clicks to pass through -->
                        <Setter Property="Visibility" Value="Hidden" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Content" Value="{Binding Placeholder}" />
                        <d:Setter Property="Visibility" Value="Visible" />
                        <d:Setter Property="Content" Value="Placeholder" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="False" Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=Children[0].IsFocused}" />
                                    <Condition Value="" Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=Children[0].Text}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </TextBox.Resources>
    <TextBox.Template>
        <ControlTemplate>
            <Grid
                Height="30"
                MinWidth="100"
                DataContext="{Binding ElementName=TextInputElement}">
                <TextBox Style="{StaticResource TextInput.TextBox}" Text="{Binding Path=Text, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                <Label Style="{StaticResource TextInput.Placeholder}" />
            </Grid>
        </ControlTemplate>
    </TextBox.Template>
</TextBox>