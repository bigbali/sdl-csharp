<Button x:Class="sdl_csharp.Resource.Control.SwitchButton"
        x:Name="SwitchButtonElement"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        mc:Ignorable="d" 
        d:DesignHeight="100"
        d:DesignWidth="400">
    <Button.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/sdl-csharp;component/Resource/Style/Button.xaml"/>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="SwitchButtonBorder.Brush"           Color="#59426380"/>
                    <SolidColorBrush x:Key="SwitchButtonBorder.Brush.MouseOver" Color="#FF577D9A"/>
                    <!-- Wrapper button -->
                    <Style x:Key="SwitchButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="VerticalContentAlignment"   Value="Center" />
                        <Setter Property="Width"                      Value="160" />
                        <Setter Property="Height"                     Value="32" />
                        <Setter Property="Padding"                    Value="0" />
                        <Setter Property="Cursor"                     Value="Hand" />
                        <Setter Property="Template">
                            <!-- Override hover color on button container border -->
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border">
                                        <ContentPresenter x:Name="contentPresenter" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource Color.Button.Background.Hover}" TargetName="border"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- Border -->
                    <Style x:Key="SwitchButton.Border" TargetType="{x:Type Border}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="{StaticResource Color.Border}" />
                        <Setter Property="CornerRadius" Value="15" />
                        <Setter Property="Width" Value="160" />
                    </Style>
                    <!-- Label -->
                    <Style x:Key="SwitchButton.Label" TargetType="{x:Type Label}">
                        <Setter Property="Padding" Value="5,0,5,0" />
                        <Setter Property="Width" Value="80" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                        <Setter Property="Panel.ZIndex" Value="2" />
                        <Setter Property="Content" Value="{Binding Content, FallbackValue='No content'}" />
                    </Style>
                    <Style x:Key="SwitchButton.Label1" TargetType="{x:Type Label}" BasedOn="{StaticResource SwitchButton.Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}"
                                         Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="SwitchButton.Label2" TargetType="{x:Type Label}" BasedOn="{StaticResource SwitchButton.Label}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}"
                                         Value="True">
                                <Setter Property="Opacity" Value="0.5"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <!-- Switch button -->
                    <Style x:Key="SwitchButton.Button" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="80"/>
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform X="0" />
                            </Setter.Value>
                        </Setter>
                        <d:Setter Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform X="0" />
                            </Setter.Value>
                        </d:Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="(RenderTransform).(TranslateTransform.X)">
                                            <DoubleAnimation To="78" 
                                                             Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="(RenderTransform).(TranslateTransform.X)">
                                            <DoubleAnimation To="0" 
                                                             Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Button.Resources>
    <Button.Template>
        <ControlTemplate>
            <Button Style="{StaticResource SwitchButton}">
                <Border Style="{StaticResource SwitchButton.Border}" DataContext="{Binding ElementName=SwitchButtonElement}">
                    <Grid>
                        <Label Style="{StaticResource SwitchButton.Label1}" Content="{Binding Content1, FallbackValue='Content1'}" HorizontalAlignment="Left" />
                        <Label Style="{StaticResource SwitchButton.Label2}" Content="{Binding Content2, FallbackValue='Content2'}" HorizontalAlignment="Right"/>
                        <Button Style="{StaticResource SwitchButton.Button}" />
                    </Grid>
                </Border>
            </Button>
        </ControlTemplate>
    </Button.Template>
</Button>
